plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id "com.heroku.sdk.heroku-gradle" version "2.0.0"
}

heroku {
    appName = "taljacob-employee-manager"
    includes = ["README.md"]
    includes = ["build/libs/app.jar"]
    includeBuildDir = false
    jdkVersion = 8
    processTypes(
            web: "java -jar build/libs/app.jar"
    )
}

apply plugin: 'java'

group = 'com.tal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// Enable UTF-8 compile
compileJava { options.encoding = "UTF-8" }
compileTestJava { options.encoding = "UTF-8" }

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/org.postgresql/postgresql
    implementation 'org.postgresql:postgresql:42.2.23'
}

//test {
//    useJUnitPlatform()
//}

nameArchive("app")

private void nameArchive(String name) {
    project.setArchivesBaseName(name)
    project.setVersion("")
}


















//
//def webappDir = "$projectDir/src/main/angular"
//sourceSets {
//    main {
//        resources {
//            srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
//        }
//    }
//}
//
//processResources {
//    dependsOn "buildAngular"
//}
//
//task buildAngular(type:Exec) {
//
//    // installAngular should be run prior to this task
//    dependsOn "installAngular"
//    workingDir "$webappDir"
//    inputs.dir "$webappDir"
//
//    // Add task to the standard build group
//    group = BasePlugin.BUILD_GROUP
//
//    // ng doesn't exist as a file in windows -> ng.cmd
//    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
//        commandLine "ng.cmd", "build"
//    } else {
//        commandLine "ng", "build"
//    }
//}
//
//task installAngular(type:Exec) {
//    workingDir "$webappDir"
//    inputs.dir "$webappDir"
//    group = BasePlugin.BUILD_GROUP
//    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
//        commandLine "npm.cmd", "install"
//    } else {
//        commandLine "npm", "install"
//    }
//}
